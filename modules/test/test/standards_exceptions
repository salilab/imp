standard_unittest_attributes = [
   'addCleanup', 'addTypeEqualityFunc', 'assertAlmostEqual',
   'assertAlmostEquals', 'assertClassNames', 'assertDictContainsSubset',
   'assertDictEqual', 'assertEqual', 'assertEquals', 'assertFalse',
   'assertFunctionNames', 'assertGreater', 'assertGreaterEqual', 'assertIn',
   'assertIs', 'assertIsInstance', 'assertIsNone', 'assertIsNot',
   'assertIsNotNone', 'assertItemsEqual', 'assertLess', 'assertLessEqual',
   'assertListEqual', 'assertMultiLineEqual', 'assertNotAlmostEqual',
   'assertNotAlmostEquals', 'assertNotEqual', 'assertNotEquals', 'assertNotIn',
   'assertNotIsInstance', 'assertNotRegexpMatches', 'assertRaises',
   'assertRaisesRegexp', 'assertRegexpMatches', 'assertSequenceEqual',
   'assertSetEqual', 'assertShow', 'assertTrue', 'assertTupleEqual', 'assert_',
   'countTestCases', 'debug', 'defaultTestResult', 'doCleanups', 'fail',
   'failIf', 'failIfAlmostEqual', 'failIfEqual', 'failUnless',
   'failUnlessAlmostEqual', 'failUnlessEqual', 'failUnlessRaises', 'id',
   'setUp', 'setUpClass', 'shortDescription', 'skipTest', 'tearDown',
   'tearDownClass', 'assertLogs', 'subTest', 'addClassCleanup',
   'doClassCleanups', 'assertNoLogs', 'enterClassContext', 'enterContext' ]
path_attributes = [
   'absolute', 'as_posix', 'as_uri', 'chmod', 'cwd', 'exists', 'glob', 'group',
   'is_absolute', 'is_block_device', 'is_char_device', 'is_dir', 'is_fifo',
   'is_file', 'is_reserved', 'is_socket', 'is_symlink', 'iterdir', 'joinpath',
   'lchmod', 'lstat', 'match', 'mkdir', 'open', 'owner', 'relative_to',
   'rename', 'replace', 'resolve', 'rglob', 'rmdir', 'stat', 'symlink_to',
   'touch', 'unlink', 'with_name', 'with_suffix', 'expanduser', 'hardlink_to',
   'home', 'is_mount', 'is_relative_to', 'readlink', 'samefile', 'with_stem' ]
exceptions = ["Path." + x for x in path_attributes] \
           + ["TestCase." + x for x in standard_unittest_attributes] \
           + ["ApplicationTestCase." + x for x in standard_unittest_attributes]

exceptions.extend([
   'ApplicationTestCase.assertApplicationExitedCleanly',
   'ApplicationTestCase.assertValueObjects',
   'ApplicationTestCase.assertRaisesUsageException',
   'ApplicationTestCase.assertRaisesInternalException',
   'ApplicationTestCase.assertNotImplemented',
   'ApplicationTestCase.assertXYZDerivativesInTolerance',
   'ApplicationTestCase.assertNumPyArrayEqual',
   'ApplicationTestCase.check_runnable_python_module',
   'ApplicationTestCase.check_unary_function_deriv',
   'ApplicationTestCase.check_unary_function_min',
   'ApplicationTestCase.failure_probability',
   'ApplicationTestCase.get_tmp_file_name',
   'ApplicationTestCase.import_python_application',
   'ApplicationTestCase.open_input_file',
   'ApplicationTestCase.particle_distance',
   'ApplicationTestCase.probabilistic_check',
   'ApplicationTestCase.randomize_particles',
   'ApplicationTestCase.assertCountEqual',
   'ApplicationTestCase.assertNotRegex',
   'ApplicationTestCase.assertRaisesRegex',
   'ApplicationTestCase.assertRegex',
   'ApplicationTestCase.assertWarns',
   'ApplicationTestCase.assertWarnsRegex',
   'ApplicationTestCase.check_standard_object_methods',
   'ApplicationTestCase.assertSequenceAlmostEqual',
   'DirectorObjectChecker.assert_number',
   'RefCountChecker.assert_number',
   'TestCase.assertValueObjects',
   'TestCase.assertRaisesUsageException',
   'TestCase.assertRaisesInternalException',
   'TestCase.assertNotImplemented',
   'TestCase.assertXYZDerivativesInTolerance',
   'TestCase.assertNumPyArrayEqual',
   'TestCase.check_runnable_python_module',
   'TestCase.check_unary_function_deriv',
   'TestCase.check_unary_function_min',
   'TestCase.failure_probability',
   'TestCase.get_tmp_file_name',
   'TestCase.open_input_file',
   'TestCase.particle_distance',
   'TestCase.probabilistic_check',
   'TestCase.randomize_particles',
   'TestCase.assertCountEqual',
   'TestCase.assertNotRegex',
   'TestCase.assertRaisesRegex',
   'TestCase.assertRegex',
   'TestCase.assertWarns',
   'TestCase.assertWarnsRegex',
   'TestCase.check_standard_object_methods',
   'TestCase.assertSequenceAlmostEqual',
   'safe_repr',
   'set.copy',
   'set.difference',
   'set.difference_update',
   'set.discard',
   'set.intersection',
   'set.intersection_update',
   'set.issubset',
   'set.issuperset',
   'set.symmetric_difference',
   'set.symmetric_difference_update',
   'set.union',
   'set.union_update',
   'expectedFailure', 'main', 'numerical_derivative', 'skip', 'skipIf',
   'skipUnless', 'xyz_numerical_derivatives', 'temporary_directory',
   'temporary_working_directory'])


value_object_exceptions=[]
function_name_exceptions=exceptions
show_exceptions=[]
spelling_exceptions=[]
