spelling_exceptions=['guinier', 'jeffreys', 'gaussian',
                                       'porod', 'logsquares', 'timestep',
                                       'ndims', 'gammahat', 'chiexp', 'logdet']
function_name_exceptions=[
        'BivariateFunction.has_changed',
        'Covariance1DFunction.has_changed',
        'FNormal.density',
        'FNormal.evaluate_derivative_FA',
        'FNormal.evaluate_derivative_FM',
        'FNormal.evaluate_derivative_JA',
        'FNormal.set_FA',
        'FNormal.set_FM',
        'FNormal.set_JA',
        'GaussianProcessInterpolation.force_covariance_update',
        'GaussianProcessInterpolation.force_mean_update',
        'GaussianProcessInterpolation.get_Omega_particle_is_optimized',
        'GaussianProcessInterpolation.get_number_of_Omega_particles',
        'GaussianProcessInterpolationRestraint.stats',
        'GeneralizedGuinierPorodFunction.has_changed',
        'Linear1DFunction.has_changed',
        'MarginalNOERestraint.get_SS',
        'MolecularDynamics.assign_velocities',
        'MolecularDynamics.simulate',
        'Nuisance.get_has_lower',
        'Nuisance.get_has_upper',
        'Scale.get_has_lower',
        'Scale.get_has_upper',
        'Switching.get_has_lower',
        'Switching.get_has_upper',
        'TALOSRestraint.get_R0',
        'UnivariateFunction.has_changed',
        'vonMises.density',
        'vonMisesSufficient.density',
        'vonMisesSufficient.get_N',
        'vonMisesSufficient.get_R0',
        'vonMisesSufficient.set_N',
        'vonMisesSufficient.set_R0']
