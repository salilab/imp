# Autogenerated file, run tools/build/setup_cmake.py to regenerate

message(STATUS "Setting up module " rmf)

FILE(GLOB gensources
     "${PROJECT_BINARY_DIR}/src/rmf/*.cpp")

FILE(GLOB genheaders
     "${PROJECT_BINARY_DIR}/include/IMP/rmf/*.h")

include_directories(${ANN_INCLUDE_PATH}
        ${BOOST.FILESYSTEM_INCLUDE_PATH}
        ${BOOST.PROGRAMOPTIONS_INCLUDE_PATH}
        ${BOOST.RANDOM_INCLUDE_PATH}
        ${BOOST.REGEX_INCLUDE_PATH}
        ${BOOST.SYSTEM_INCLUDE_PATH}
        ${CGAL_INCLUDE_PATH}
        ${GPERFTOOLS_INCLUDE_PATH}
        ${LOG4CXX_INCLUDE_PATH}
        ${RMF_INCLUDE_PATH}
        ${TCMALLOC_HEAPCHECKER_INCLUDE_PATH}
        ${TCMALLOC_HEAPPROFILER_INCLUDE_PATH})
link_directories(${ANN_LINK_PATH}
        ${BOOST.FILESYSTEM_LINK_PATH}
        ${BOOST.PROGRAMOPTIONS_LINK_PATH}
        ${BOOST.RANDOM_LINK_PATH}
        ${BOOST.REGEX_LINK_PATH}
        ${BOOST.SYSTEM_LINK_PATH}
        ${CGAL_LINK_PATH}
        ${GPERFTOOLS_LINK_PATH}
        ${LOG4CXX_LINK_PATH}
        ${RMF_LINK_PATH}
        ${TCMALLOC_HEAPCHECKER_LINK_PATH}
        ${TCMALLOC_HEAPPROFILER_LINK_PATH})
add_definitions("-DIMPRMF_EXPORTS")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${RMF_CXX_FLAGS}")

set(headers ${PROJECT_SOURCE_DIR}/modules/rmf/include/RMFWriter.h ${PROJECT_SOURCE_DIR}/modules/rmf/include/SaveOptimizerState.h ${PROJECT_SOURCE_DIR}/modules/rmf/include/associations.h ${PROJECT_SOURCE_DIR}/modules/rmf/include/atom_io.h ${PROJECT_SOURCE_DIR}/modules/rmf/include/atom_links.h ${PROJECT_SOURCE_DIR}/modules/rmf/include/frames.h ${PROJECT_SOURCE_DIR}/modules/rmf/include/geometry_io.h ${PROJECT_SOURCE_DIR}/modules/rmf/include/link_macros.h ${PROJECT_SOURCE_DIR}/modules/rmf/include/links.h ${PROJECT_SOURCE_DIR}/modules/rmf/include/particle_io.h ${PROJECT_SOURCE_DIR}/modules/rmf/include/restraint_io.h ${PROJECT_SOURCE_DIR}/modules/rmf/include/simple_links.h)

if(DEFINED IMP_RMF_LIBRARY_EXTRA_SOURCES)
  set_source_files_properties(${IMP_RMF_LIBRARY_EXTRA_SOURCES}
                              PROPERTIES GENERATED 1)
endif()

if(DEFINED IMP_rmf_IS_PER_CPP)
  set(sources ${PROJECT_SOURCE_DIR}/modules/rmf/src/RMFWriter.cpp ${PROJECT_SOURCE_DIR}/modules/rmf/src/SaveOptimizerState.cpp ${PROJECT_SOURCE_DIR}/modules/rmf/src/associations.cpp ${PROJECT_SOURCE_DIR}/modules/rmf/src/atom_io.cpp ${PROJECT_SOURCE_DIR}/modules/rmf/src/atom_links.cpp ${PROJECT_SOURCE_DIR}/modules/rmf/src/frames.cpp ${PROJECT_SOURCE_DIR}/modules/rmf/src/geometry_io.cpp ${PROJECT_SOURCE_DIR}/modules/rmf/src/links.cpp ${PROJECT_SOURCE_DIR}/modules/rmf/src/particle_io.cpp ${PROJECT_SOURCE_DIR}/modules/rmf/src/restraint_io.cpp)

  add_library(imp_rmf ${IMP_LIB_TYPE} ${gensources} ${genheaders}
              ${headers} ${sources}
              ${IMP_RMF_LIBRARY_EXTRA_SOURCES}
              )
else()

  add_library(imp_rmf ${IMP_LIB_TYPE} ${gensources} ${genheaders}
              ${headers} ${PROJECT_BINARY_DIR}/src/rmf_all.cpp
              ${IMP_RMF_LIBRARY_EXTRA_SOURCES}
              )

endif()
INSTALL(TARGETS imp_rmf DESTINATION ${CMAKE_INSTALL_LIBDIR})

foreach(d IMP_RMF_LIBRARY_EXTRA_DEPENDENCIES)
  add_dependencies(imp_rmf ${d})
endforeach(d)

target_link_libraries(imp_rmf
                      ${IMP_BASE_LIBRARY} ${IMP_CGAL_LIBRARY} ${IMP_ALGEBRA_LIBRARY} ${IMP_KERNEL_LIBRARY} ${IMP_DISPLAY_LIBRARY} ${IMP_SCORE_FUNCTOR_LIBRARY} ${IMP_CORE_LIBRARY} ${IMP_CONTAINER_LIBRARY} ${IMP_ATOM_LIBRARY}
                      ${RMF_LIBRARIES} ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES} ${BOOST.RANDOM_LIBRARIES} ${CGAL_LIBRARIES} ${ANN_LIBRARIES} ${BOOST.REGEX_LIBRARIES}
  )

set(IMP_RMF_LIBRARY imp_rmf CACHE INTERNAL "" FORCE)
