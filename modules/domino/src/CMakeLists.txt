# Autogenerated file, run tools/build/setup_cmake.py to regenerate

message(STATUS "Setting up module " domino)

FILE(GLOB gensources
     "${PROJECT_BINARY_DIR}/src/domino/*.cpp")

FILE(GLOB genheaders
     "${PROJECT_BINARY_DIR}/include/IMP/domino/*.h")

include_directories(${ANN_INCLUDE_PATH}
        ${BOOST.FILESYSTEM_INCLUDE_PATH}
        ${BOOST.GRAPH_INCLUDE_PATH}
        ${BOOST.PROGRAMOPTIONS_INCLUDE_PATH}
        ${BOOST.RANDOM_INCLUDE_PATH}
        ${BOOST.REGEX_INCLUDE_PATH}
        ${BOOST.SYSTEM_INCLUDE_PATH}
        ${CGAL_INCLUDE_PATH}
        ${GPERFTOOLS_INCLUDE_PATH}
        ${HDF5_INCLUDE_PATH}
        ${LOG4CXX_INCLUDE_PATH}
        ${RMF_INCLUDE_PATH}
        ${TCMALLOC_HEAPCHECKER_INCLUDE_PATH}
        ${TCMALLOC_HEAPPROFILER_INCLUDE_PATH})
link_directories(${ANN_LINK_PATH}
        ${BOOST.FILESYSTEM_LINK_PATH}
        ${BOOST.GRAPH_LINK_PATH}
        ${BOOST.PROGRAMOPTIONS_LINK_PATH}
        ${BOOST.RANDOM_LINK_PATH}
        ${BOOST.REGEX_LINK_PATH}
        ${BOOST.SYSTEM_LINK_PATH}
        ${CGAL_LINK_PATH}
        ${GPERFTOOLS_LINK_PATH}
        ${HDF5_LINK_PATH}
        ${LOG4CXX_LINK_PATH}
        ${RMF_LINK_PATH}
        ${TCMALLOC_HEAPCHECKER_LINK_PATH}
        ${TCMALLOC_HEAPPROFILER_LINK_PATH})
add_definitions("-DIMPDOMINO_EXPORTS")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${DOMINO_CXX_FLAGS}")

set(headers ${PROJECT_SOURCE_DIR}/modules/domino/include/Assignment.h ${PROJECT_SOURCE_DIR}/modules/domino/include/BranchAndBoundSampler.h ${PROJECT_SOURCE_DIR}/modules/domino/include/DependencyScoreState.h ${PROJECT_SOURCE_DIR}/modules/domino/include/DiscreteSampler.h ${PROJECT_SOURCE_DIR}/modules/domino/include/DominoSampler.h ${PROJECT_SOURCE_DIR}/modules/domino/include/Order.h ${PROJECT_SOURCE_DIR}/modules/domino/include/Slice.h ${PROJECT_SOURCE_DIR}/modules/domino/include/Subset.h ${PROJECT_SOURCE_DIR}/modules/domino/include/analysis.h ${PROJECT_SOURCE_DIR}/modules/domino/include/assignment_containers.h ${PROJECT_SOURCE_DIR}/modules/domino/include/assignment_tables.h ${PROJECT_SOURCE_DIR}/modules/domino/include/domino_macros.h ${PROJECT_SOURCE_DIR}/modules/domino/include/interactive.h ${PROJECT_SOURCE_DIR}/modules/domino/include/particle_states.h ${PROJECT_SOURCE_DIR}/modules/domino/include/subset_filters.h ${PROJECT_SOURCE_DIR}/modules/domino/include/subset_graphs.h ${PROJECT_SOURCE_DIR}/modules/domino/include/subset_scores.h ${PROJECT_SOURCE_DIR}/modules/domino/include/utility.h ${PROJECT_SOURCE_DIR}/modules/domino/include/internal/inference_utility.h ${PROJECT_SOURCE_DIR}/modules/domino/include/internal/loopy_inference.h ${PROJECT_SOURCE_DIR}/modules/domino/include/internal/maximal_cliques.h ${PROJECT_SOURCE_DIR}/modules/domino/include/internal/tree_inference.h)

if(DEFINED IMP_DOMINO_LIBRARY_EXTRA_SOURCES)
  set_source_files_properties(${IMP_DOMINO_LIBRARY_EXTRA_SOURCES}
                              PROPERTIES GENERATED 1)
endif()

if(DEFINED IMP_domino_IS_PER_CPP)
  set(sources ${PROJECT_SOURCE_DIR}/modules/domino/src/Assignment.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/BranchAndBoundSampler.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/DependencyScoreState.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/DiscreteSampler.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/DominoSampler.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/Order.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/Slice.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/Subset.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/analysis.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/assignment_containers.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/assignment_tables.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/interactive.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/particle_states.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/subset_filters.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/subset_graphs.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/subset_scores.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/utility.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/internal/inference_utility.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/internal/loopy_inference.cpp ${PROJECT_SOURCE_DIR}/modules/domino/src/internal/tree_inference.cpp)

  add_library(imp_domino ${IMP_LIB_TYPE} ${gensources} ${genheaders}
              ${headers} ${sources}
              ${IMP_DOMINO_LIBRARY_EXTRA_SOURCES}
              )
else()

  add_library(imp_domino ${IMP_LIB_TYPE} ${gensources} ${genheaders}
              ${headers} ${PROJECT_BINARY_DIR}/src/domino_all.cpp
              ${IMP_DOMINO_LIBRARY_EXTRA_SOURCES}
              )

endif()
INSTALL(TARGETS imp_domino DESTINATION ${CMAKE_INSTALL_LIBDIR})

foreach(d IMP_DOMINO_LIBRARY_EXTRA_DEPENDENCIES)
  add_dependencies(imp_domino ${d})
endforeach(d)

target_link_libraries(imp_domino
                      ${IMP_BASE_LIBRARY} ${IMP_CGAL_LIBRARY} ${IMP_ALGEBRA_LIBRARY} ${IMP_KERNEL_LIBRARY} ${IMP_DISPLAY_LIBRARY} ${IMP_SCORE_FUNCTOR_LIBRARY} ${IMP_CORE_LIBRARY} ${IMP_CONTAINER_LIBRARY} ${IMP_STATISTICS_LIBRARY} ${IMP_ATOM_LIBRARY} ${IMP_RMF_LIBRARY}
                      ${BOOST.GRAPH_LIBRARIES} ${RMF_LIBRARIES} ${HDF5_LIBRARIES} ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES} ${BOOST.RANDOM_LIBRARIES} ${CGAL_LIBRARIES} ${ANN_LIBRARIES} ${BOOST.REGEX_LIBRARIES}
  )

set(IMP_DOMINO_LIBRARY imp_domino CACHE INTERNAL "" FORCE)
