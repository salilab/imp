IMP_SWIG_OBJECT(IMP::container, AllBipartitePairContainer, AllBipartitePairContainers);
IMP_SWIG_OBJECT(IMP::container, AllPairContainer, AllPairContainers);
IMP_SWIG_OBJECT(IMP::container, CloseBipartitePairContainer, CloseBipartitePairContainers);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, ClosePairContainer, ClosePairContainers);
IMP_SWIG_OBJECT(IMP::container, ConnectingPairContainer, ConnectingPairContainers);
IMP_SWIG_OBJECT(IMP::container, ConsecutivePairContainer, ConsecutivePairContainers);
IMP_SWIG_OBJECT(IMP::container, ExclusiveConsecutivePairContainer, ExclusiveConsecutivePairContainers);
IMP_SWIG_OBJECT(IMP::container, ExclusiveConsecutivePairFilter, ExclusiveConsecutivePairFilters);
IMP_SWIG_OBJECT(IMP::container, ConsecutivePairFilter, ConsecutivePairFilters);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, ListPairContainer, ListPairContainers);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, ListQuadContainer, ListQuadContainers);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, ListSingletonContainer, ListSingletonContainers);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, ListTripletContainer, ListTripletContainers);
IMP_SWIG_OBJECT(IMP::container, DynamicListPairContainer, DynamicListPairContainers);
IMP_SWIG_OBJECT(IMP::container, DynamicListQuadContainer, DynamicListQuadContainers);
IMP_SWIG_OBJECT(IMP::container, DynamicListSingletonContainer, DynamicListSingletonContainers);
IMP_SWIG_OBJECT(IMP::container, DynamicListTripletContainer, DynamicListTripletContainers);
IMP_SWIG_OBJECT(IMP::container, MinimumPairRestraint, MinimumPairRestraints);
IMP_SWIG_OBJECT(IMP::container, MinimumPairScore, MinimumPairScores);
IMP_SWIG_OBJECT(IMP::container, MinimumQuadRestraint, MinimumQuadRestraints);
IMP_SWIG_OBJECT(IMP::container, MinimumQuadScore, MinimumQuadScores);
IMP_SWIG_OBJECT(IMP::container, MinimumSingletonRestraint, MinimumSingletonRestraints);
IMP_SWIG_OBJECT(IMP::container, MinimumSingletonScore, MinimumSingletonScores);
IMP_SWIG_OBJECT(IMP::container, MinimumTripletRestraint, MinimumTripletRestraints);
IMP_SWIG_OBJECT(IMP::container, MinimumTripletScore, MinimumTripletScores);
IMP_SWIG_OBJECT(IMP::container, PairContainerSet, PairContainerSets);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, PairsConstraint, PairsConstraints);
IMP_SWIG_OBJECT(IMP::container, PairsOptimizerState, PairsOptimizerStates);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, PairsRestraint, PairsRestraints);
IMP_SWIG_OBJECT(IMP::container, QuadContainerSet, QuadContainerSets);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, QuadsConstraint, QuadsConstraints);
IMP_SWIG_OBJECT(IMP::container, QuadsOptimizerState, QuadsOptimizerStates);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, QuadsRestraint, QuadsRestraints);
IMP_SWIG_OBJECT(IMP::container, SingletonContainerSet, SingletonContainerSets);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, SingletonsConstraint, SingletonsConstraints);
IMP_SWIG_OBJECT(IMP::container, SingletonsOptimizerState, SingletonsOptimizerStates);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, SingletonsRestraint, SingletonsRestraints);
IMP_SWIG_OBJECT(IMP::container, TripletContainerSet, TripletContainerSets);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, TripletsConstraint, TripletsConstraints);
IMP_SWIG_OBJECT(IMP::container, TripletsOptimizerState, TripletsOptimizerStates);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, TripletsRestraint, TripletsRestraints);
IMP_SWIG_OBJECT(IMP::container, InContainerSingletonFilter, InContainerSingletonFilters);
IMP_SWIG_OBJECT(IMP::container, InContainerPairFilter, InContainerPairFilters);
IMP_SWIG_OBJECT(IMP::container, InContainerTripletFilter, InContainerTripletFilters);
IMP_SWIG_OBJECT(IMP::container, InContainerQuadFilter, InContainerQuadFilters);
IMP_SWIG_OBJECT(IMP::container, SingletonContainerStatistics, SingletonContainerStatisticsList);
IMP_SWIG_OBJECT(IMP::container, PairContainerStatistics, PairContainerStatisticsList);
IMP_SWIG_OBJECT(IMP::container, TripletContainerStatistics, TripletContainerStatisticsList);
IMP_SWIG_OBJECT(IMP::container, QuadContainerStatistics, QuadContainerStatisticsList);
IMP_SWIG_OBJECT(IMP::container, EventSingletonsOptimizerState, EventSingletonsOptimizerStateList);
IMP_SWIG_OBJECT(IMP::container, EventPairsOptimizerState, EventPairsOptimizerStateList);
IMP_SWIG_OBJECT(IMP::container, EventTripletsOptimizerState, EventTripletsOptimizerStateList);
IMP_SWIG_OBJECT(IMP::container, EventQuadsOptimizerState, EventQuadsOptimizerStateList);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, PredicateSingletonsRestraint, PredicateSingletonsRestraints);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, PredicatePairsRestraint, PredicatePairRestraints);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, PredicateTripletsRestraint, PredicateTripletsRestraints);
IMP_SWIG_OBJECT_SERIALIZE(IMP::container, PredicateQuadsRestraint, PredicateQuadsRestraints);
IMP_SWIG_OBJECT(IMP::container, DistributeSingletonsScoreState, DistributeSingletonsScoreStates);
IMP_SWIG_OBJECT(IMP::container, DistributePairsScoreState, DistributePairScoreStates);
IMP_SWIG_OBJECT(IMP::container, DistributeTripletsScoreState, DistributeTripletsScoreStates);
IMP_SWIG_OBJECT(IMP::container, DistributeQuadsScoreState, DistributeQuadsScoreStates);


/* Wrap our own classes */
%include "IMP/container/AllBipartitePairContainer.h"
%include "IMP/container/AllPairContainer.h"
%include "IMP/container/CloseBipartitePairContainer.h"
%include "IMP/container/ClosePairContainer.h"
%include "IMP/container/ConnectingPairContainer.h"
%include "IMP/container/ConsecutivePairContainer.h"
%include "IMP/container/ListPairContainer.h"
%include "IMP/container/ListQuadContainer.h"
%include "IMP/container/ListSingletonContainer.h"
%include "IMP/container/ListTripletContainer.h"
%include "IMP/container/DynamicListPairContainer.h"
%include "IMP/container/DynamicListQuadContainer.h"
%include "IMP/container/DynamicListSingletonContainer.h"
%include "IMP/container/DynamicListTripletContainer.h"
%include "IMP/container/MinimumPairRestraint.h"
%include "IMP/container/MinimumPairScore.h"
%include "IMP/container/MinimumQuadRestraint.h"
%include "IMP/container/MinimumQuadScore.h"
%include "IMP/container/MinimumSingletonRestraint.h"
%include "IMP/container/MinimumSingletonScore.h"
%include "IMP/container/MinimumTripletRestraint.h"
%include "IMP/container/MinimumTripletScore.h"
%include "IMP/container/PairContainerSet.h"
%include "IMP/container/PairsConstraint.h"
%include "IMP/container/PairsOptimizerState.h"
%include "IMP/container/PairsRestraint.h"
%include "IMP/container/QuadContainerSet.h"
%include "IMP/container/QuadsConstraint.h"
%include "IMP/container/QuadsOptimizerState.h"
%include "IMP/container/QuadsRestraint.h"
%include "IMP/container/SingletonContainerSet.h"
%include "IMP/container/SingletonsConstraint.h"
%include "IMP/container/SingletonsOptimizerState.h"
%include "IMP/container/SingletonsRestraint.h"
%include "IMP/container/TripletContainerSet.h"
%include "IMP/container/TripletsConstraint.h"
%include "IMP/container/TripletsOptimizerState.h"
%include "IMP/container/TripletsRestraint.h"
%include "IMP/container/InContainerSingletonFilter.h"
%include "IMP/container/InContainerPairFilter.h"
%include "IMP/container/InContainerTripletFilter.h"
%include "IMP/container/InContainerQuadFilter.h"
%include "IMP/container/SingletonContainerStatistics.h"
%include "IMP/container/PairContainerStatistics.h"
%include "IMP/container/TripletContainerStatistics.h"
%include "IMP/container/QuadContainerStatistics.h"
%include "IMP/container/EventSingletonsOptimizerState.h"
%include "IMP/container/EventPairsOptimizerState.h"
%include "IMP/container/EventTripletsOptimizerState.h"
%include "IMP/container/EventQuadsOptimizerState.h"
%include "IMP/container/PredicateSingletonsRestraint.h"
%include "IMP/container/PredicatePairsRestraint.h"
%include "IMP/container/PredicateTripletsRestraint.h"
%include "IMP/container/PredicateQuadsRestraint.h"
%include "IMP/container/DistributeSingletonsScoreState.h"
%include "IMP/container/DistributePairsScoreState.h"
%include "IMP/container/DistributeTripletsScoreState.h"
%include "IMP/container/DistributeQuadsScoreState.h"

%inline %{
IMP::Restraint *create_restraint(IMP::PairScore *ps, IMP::PairContainer* pp) {
   return IMP::container::create_restraint(ps, pp);
}
%}
