/* Tell swig how to treat various types when moving them to and from python. Among other
   things, they tell swig how to convert collections of C++ objects (eg ExampleRestraints)
   into python lists and back.

   IMP_SWIG_OBJECT, IMP_SWIG_VALUE and IMP_SWIG_DECORATOR lines need to appear before any
   %include lines as well as any inline C++ code (or at least any such code which uses
   the types in question).
  */
IMP_SWIG_OBJECT(IMP::kmeans, KMeans, KMeansList);

/* One can add python methods to your module by putting code in %pythoncode blocks
   This function can be called as IMP.kmeanss.say_hello(). */
/*%pythoncode %{
%}
*/


/* Wrap Our own classes. Each header in the module should be listed here with a
   %include line.*/
%include "IMP/kmeans/KMeans.h"

namespace IMP {
  namespace kmeans {
  /* Python doesn't natively support C++ templates, so you have to manually
     choose which template parameters you want to instantiate a template with.
   */
  }
}
