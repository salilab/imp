name: CI
on:
  push:
    branches: [develop]
  pull_request:

env:
  CXXFLAGS: "-fprofile-arcs -ftest-coverage"

jobs:
  test:
    name: "Python ${{ matrix.python-version }} / ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["2.7", "3.6"]
        os: [ubuntu-18.04]
        compiler: [gcc]
    env:
      CC: ${{ matrix.compiler }}
      PY2: ${{ startsWith(matrix.python-version, 2) && 'on' || 'off' }}
      BUILD: "-j 2 IMP.kernel IMP.test IMP.core IMP.algebra IMP.container"
      PERCPP: "kernel"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq libboost-all-dev swig libhdf5-serial-dev libeigen3-dev \
            cmake libcgal-dev libcgal-qt5-dev libfftw3-dev libopencv-dev libgsl0-dev \
            libann-dev libprotobuf-dev protobuf-compiler libopenmpi-dev
          if [ "${{ env.PY2 }}" == "on" ]
          then
            sudo apt-get install -qq python-dev python-numpy python-protobuf \
                                     python-coverage python-pip \
                                     python-biopython python-pytest-xdist \
                                     python-pytest-cov
            export PIP=pip2
          else
            sudo apt-get install -qq python3-dev python3-numpy python3-protobuf \
                                     python3-coverage python3-pip \
                                     python3-biopython python3-pytest-xdist \
                                     python3-pytest-cov
            export PIP=pip3
          fi
          $PIP install codecov
      - name: Set up git
        run: ./setup_git.py
      - name: Build IMP
        run: |
          mkdir build
          cd build
          cmake .. -DUSE_PYTHON2=${{ env.PY2 }} -DCMAKE_CXX_FLAGS="${{ env.CXXFLAGS }}" \
                   -DCGAL_DIR=/usr/lib/x86_64-linux-gnu/cmake/CGAL/ \
                   -DIMP_PER_CPP_COMPILATION=${{ env.PERCPP }}
          make -k ${{ env.BUILD }}
      - name: Run tests
        run: |
          if [ "${{ env.PY2 }}" == "on" ]; then
            export PYTEST=pytest
          else
            export PYTEST=pytest-3
          fi
          cd build
          ./setup_environment.sh $PYTEST --cov=.. --cov-report=xml --cov-branch --forked ../modules/kernel/test/test_*.py
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: false
          directory: build
